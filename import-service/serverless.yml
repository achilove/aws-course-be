service: import-service
frameworkVersion: '2'
variablesResolutionMode: 20210326
configValidationMode: error


provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: eu-west-1

  iam:
    role:
      statements:
        - Effect: "Allow"
          Action: "s3:ListBucket"
          Resource:
            - "arn:aws:s3:::import-srv"
        - Effect: "Allow"
          Action:
            - "s3:*"
          Resource:
            - "arn:aws:s3:::import-srv/*"
        - Effect: Allow
          Action:
            - sqs:*
          Resource: !GetAtt CatalogItemsQueue.Arn
        - Effect: Allow
          Action:
            - sns:*
          Resource: !Ref ProductTopic


functions:
  importProductsFile:
    handler: handler.importProductsFile
    events:
      - http:
          path: import
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                name: true
  importFileParser:
    handler: handler.importFileParser
    events:
      - s3:
          bucket: import-srv
          event: s3:ObjectCreated:*
          existing: true
  catalogBatchProcess:
    handler: handler.catalogBatchProcess
    environment:
      PRODUCT_TOPIC: !Ref ProductTopic
    events:
      - sqs:
          arn: !GetAtt CatalogItemsQueue.Arn
          batchSize: 5

resources:
  Resources:
    CatalogItemsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItemsQueue
    ProductTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ProductTopic
    ProductTopicSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: 'javokhir_achilov@epam.com'
        Protocol: email
        TopicArn: !Ref ProductTopic
        FilterPolicy:
          price: [10]